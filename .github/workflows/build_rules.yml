name: 'Build distributable binary rules file from downloaded raw text files'

on:
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setting-up GitHub username
        run: |
          git config --global user.email "github@actions"
          git config --global user.name "Repository manager"
        
      - name: Generate concatenated rules file
        run: find ./downloaded_rules -type f -exec cat {} + > ./concatenated_rules.txt

      - name: Emptying output folder
        run: git rm -rf ./output/

      - name: Creating output folder
        run: mkdir -p ./output/

      - name: Adding executable permission to generation tools
        run: chmod +x ./tools/ruleset_converter

      - name: Generating binary rules file
        run: ./tools/ruleset_converter --input_format=filter-list --output_format=unindexed-ruleset --input_files=./concatenated_rules.txt --output_file="./output/Filtering Rules"
      
      - name: Generating LICENSE file
        run: cat licenses/* > output/LICENSE
      
      - name: Generating component file
        run: |
          version=$(date +'%y.%j')
          filename="${version}_subresource_rules.crx3"
          cat <<EOF > output/manifest.json
          {
            "manifest_version": 2,
            "name": "Subresource Filtering Rules",
            "ruleset_format": 1,
            "baserelease": "$version",
            "version": "$version"
          }
          EOF
          zip -rj "output/${filename}" output/*
          filesize=$(stat -c%s "output/${filename}")
          sha256=$(shasum -a 256 "output${filename}" | cut -f1 -d' ')
          sha1=$(python3 tools/generate_sha1_base64_signature.py "output/${filename}")
          echo "// Configuration for the update server"
          echo "if (chrome_version >= 115) {"
          echo "  sha256 = '${sha256}';"
          echo "  sha1 = '${sha1}';" 
          echo "  filesize = '${filesize}';"
          echo "  filename = '${filename}';"
          echo "}"
          echo $sha1 > output/sha1_base64.sig
          echo $sha256 > output/sha256.sig

      - name: Pushing generated binary rules file
        run: |
          rm ./concatenated_rules.txt
          git add ./output
          git commit -a -m 'Update binary rules file'
          git push
